### Create a new user (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "john_doe",
  "age": 30,
  "email": "john.doe@example.com"
}

### Create another user (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "jane_doe",
  "age": 25,
  "email": "jane.doe@example.com"
}
### Create another user (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "jackson_doe",
  "age": 28,
  "email": "jackson.doe@example.com"
}
### Create another user (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "jules_roe",
  "age": 33,
  "email": "jules.roe@example.com"
}
### Create another user invalid age (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "james_roe",
  "age": -2,
  "email": "james.roe@example.com"
}


### Create another user invalid email format (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "james_roe",
  "age": 28,
  "email": "jacks"
}
### Create another user (POST /users)
POST http://localhost:5087/users
Content-Type: application/json

{
  "userName": "rex_doe",
  "age": 28,
  "email": "jackson.doe@example.com"
}
### Get all users (GET /users)
GET http://localhost:5087/users

### Get a user by username (GET /users/{username})
GET http://localhost:5087/users/john_doe

### Update a user by username (PUT /users/{username})
PUT http://localhost:5087/users/john_doe
Content-Type: application/json

{
  "userName": "john_doe",
  "age": 35
}

### Delete a user by username (DELETE /users/{username})
DELETE http://localhost:5087/users/john_doe


### Create a new blog (POST /blogs)
POST http://localhost:5087/blogs
Content-Type: application/json

{
  "title": "My First Blog",
  "content": "This is the content of my first blog."
}

### Create another blog (POST /blogs)
POST http://localhost:5087/blogs
Content-Type: application/json

{
  "title": "My Third Blog",
  "content": "This is the content of a new blog."
}

### Create a blog with duplicate title (POST /blogs)
POST http://localhost:5087/blogs
Content-Type: application/json

{
  "title": "My First Blog",
  "content": "This is a duplicate blog with the same title."
}

### Get all blogs (GET /blogs)
GET http://localhost:5087/blogs

### Get a blog by title (GET /blogs/{title})
GET http://localhost:5087/blogs/My%20First%20Blog

### Get a non-existent blog by title (GET /blogs/{title})
GET http://localhost:5087/blogs/NonExistentBlog

### Update a blog by title (PUT /blogs/{title})
PUT http://localhost:5087/blogs/My%20First%20Blog
Content-Type: application/json

{
  "title": "My First Blog",
  "content": "This is the updated content of my first blog."
}

### Update a non-existent blog by title (PUT /blogs/{title})
PUT http://localhost:5087/blogs/NonExistentBlog
Content-Type: application/json

{
  "title": "NonExistentBlog",
  "content": "This is an update attempt for a non-existent blog."
}

### Delete a blog by title (DELETE /blogs/{title})
DELETE http://localhost:5087/blogs/My%20First%20Blog

### Delete a non-existent blog by title (DELETE /blogs/{title})
DELETE http://localhost:5087/blogs/NonExistentBlog